"use strict";(self.webpackChunkpersonal_site_2025=self.webpackChunkpersonal_site_2025||[]).push([[4668],{8884:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>h,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"cyoa/index","title":"Exercise #3: Choose your own adventure","description":"3: Choose your own adventure","source":"@site/docs/cyoa/index.md","sourceDirName":"cyoa","slug":"/cyoa/","permalink":"/docs/cyoa/","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"cyoa"}');var s=o(4848),n=o(8453);const a={},i="Exercise #3: Choose your own adventure",h={},l=[{value:"Exercise details",id:"exercise-details",level:2},{value:"Bonus",id:"bonus",level:2}];function c(e){const t={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,n.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"exercise-3-choose-your-own-adventure",children:"Exercise #3: Choose your own adventure"})}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.a,{href:"https://gophercises.com/exercises/cyoa",children:(0,s.jsx)(t.img,{src:"https://img.shields.io/badge/exercise%20status-released-green.svg?style=for-the-badge",alt:"exercise status: released"})})," ",(0,s.jsx)(t.a,{href:"https://gophercises.com/demos/cyoa/",children:(0,s.jsx)(t.img,{src:"https://img.shields.io/badge/demo-%E2%86%92-blue.svg?style=for-the-badge",alt:"demo: ->"})})]}),"\n",(0,s.jsx)(t.h2,{id:"exercise-details",children:"Exercise details"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Choose_Your_Own_Adventure",children:"Choose Your Own Adventure"})," is (was?) a series of books intended for children where as you read you would occasionally be given options about how you want to proceed. For instance, you might read about a boy walking in a cave when he stumbles across a dark passage or a ladder leading to an upper level and the reader will be presented with two options like:"]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Turn to page 44 to go up the ladder."}),"\n",(0,s.jsx)(t.li,{children:"Turn to page 87 to venture down the dark passage."}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"The goal of this exercise is to recreate this experience via a web application where each page will be a portion of the story, and at the end of every page the user will be given a series of options to choose from (or be told that they have reached the end of that particular story arc)."}),"\n",(0,s.jsx)(t.p,{children:"Stories will be provided via a JSON file with the following format:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-json",children:'{\n  // Each story arc will have a unique key that represents\n  // the name of that particular arc.\n  "story-arc": {\n    "title": "A title for that story arc. Think of it like a chapter title.",\n    "story": [\n      "A series of paragraphs, each represented as a string in a slice.",\n      "This is a new paragraph in this particular story arc."\n    ],\n    // Options will be empty if it is the end of that\n    // particular story arc. Otherwise it will have one or\n    // more JSON objects that represent an "option" that the\n    // reader has at the end of a story arc.\n    "options": [\n      {\n        "text": "the text to render for this option. eg \'venture down the dark passage\'",\n        "arc": "the name of the story arc to navigate to. This will match the story-arc key at the very root of the JSON document"\n      }\n    ]\n  },\n}\n'})}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsxs)(t.em,{children:["See ",(0,s.jsx)(t.a,{href:"https://github.com/gophercises/cyoa/blob/master/gopher.json",children:"gopher.json"})," for a real example of a JSON story. I find that seeing the real JSON file really helps answer any confusion or questions about the JSON format."]})}),"\n",(0,s.jsxs)(t.p,{children:["You are welcome to design the code however you want. You can put everything in a single ",(0,s.jsx)(t.code,{children:"main"})," package, or you can break the story into its own package and use that when creating your http handlers."]}),"\n",(0,s.jsx)(t.p,{children:"The only real requirements are:"}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsxs)(t.li,{children:["Use the ",(0,s.jsx)(t.code,{children:"html/template"})," package to create your HTML pages. Part of the purpose of this exercise is to get practice using this package."]}),"\n",(0,s.jsxs)(t.li,{children:["Create an ",(0,s.jsx)(t.code,{children:"http.Handler"})," to handle the web requests instead of a handler function."]}),"\n",(0,s.jsxs)(t.li,{children:["Use the ",(0,s.jsx)(t.code,{children:"encoding/json"})," package to decode the JSON file. You are welcome to try out third party packages afterwards, but I recommend starting here."]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"A few things worth noting:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Stories could be cyclical if a user chooses options that keep leading to the same place. This isn't likely to cause issues, but keep it in mind."}),"\n",(0,s.jsxs)(t.li,{children:['For simplicity, all stories will have a story arc named "intro" that is where the story starts. That is, every JSON file will have a key with the value ',(0,s.jsx)(t.code,{children:"intro"})," and this is where your story should start."]}),"\n",(0,s.jsxs)(t.li,{children:["Matt Holt's JSON-to-Go is a really handy tool when working with JSON in Go! Check it out - ",(0,s.jsx)(t.a,{href:"https://mholt.github.io/json-to-go/",children:"https://mholt.github.io/json-to-go/"})]}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"bonus",children:"Bonus"}),"\n",(0,s.jsx)(t.p,{children:"As a bonus exercises you can also:"}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsx)(t.li,{children:'Create a command-line version of our Choose Your Own Adventure application where stories are printed out to the terminal and options are picked via typing in numbers ("Press 1 to venture ...").'}),"\n",(0,s.jsxs)(t.li,{children:["Consider how you would alter your program in order to support stories starting form a story-defined arc. That is, what if all stories didn't start on an arc named ",(0,s.jsx)(t.code,{children:"intro"}),"? How would you redesign your program or restructure the JSON? This bonus exercises is meant to be as much of a thought exercise as an actual coding one."]}),"\n"]})]})}function d(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,t,o)=>{o.d(t,{R:()=>a,x:()=>i});var r=o(6540);const s={},n=r.createContext(s);function a(e){const t=r.useContext(n);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(n.Provider,{value:t},e.children)}}}]);