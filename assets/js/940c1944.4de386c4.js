"use strict";(self.webpackChunkpersonal_site_2025=self.webpackChunkpersonal_site_2025||[]).push([[9753],{7317:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>c,frontMatter:()=>i,metadata:()=>n,toc:()=>h});const n=JSON.parse('{"id":"urlshortener/j_exercise","title":"Exercise Details","description":"Exercise details","source":"@site/docs/urlshortener/j_exercise.md","sourceDirName":"urlshortener","slug":"/urlshortener/j_exercise","permalink":"/personal-site-2025/docs/urlshortener/j_exercise","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Exercise Details"},"sidebar":"urlshortener","previous":{"title":"Thoughts","permalink":"/personal-site-2025/docs/urlshortener/"}}');var s=r(4848),o=r(8453);const i={title:"Exercise Details"},a="Exercise 2: URL Shortener",l={},h=[{value:"Exercise details",id:"exercise-details",level:2},{value:"Bonus",id:"bonus",level:2}];function d(e){const t={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"exercise-2-url-shortener",children:"Exercise 2: URL Shortener"})}),"\n",(0,s.jsx)(t.h2,{id:"exercise-details",children:"Exercise details"}),"\n",(0,s.jsxs)(t.p,{children:["The goal of this exercise is to create an ",(0,s.jsx)(t.a,{href:"https://golang.org/pkg/net/http/#Handler",children:"http.Handler"})," that will look at the path of any incoming web request and determine if it should redirect the user to a new page, much like URL shortener would."]}),"\n",(0,s.jsxs)(t.p,{children:["For instance, if we have a redirect setup for ",(0,s.jsx)(t.code,{children:"/dogs"})," to ",(0,s.jsx)(t.code,{children:"https://www.somesite.com/a-story-about-dogs"})," we would look for any incoming web requests with the path ",(0,s.jsx)(t.code,{children:"/dogs"})," and redirect them."]}),"\n",(0,s.jsxs)(t.p,{children:["To complete this exercises you will need to implement the stubbed out methods in ",(0,s.jsx)(t.a,{href:"https://github.com/gophercises/urlshort/blob/master/handler.go",children:"handler.go"}),". There are a good bit of comments explaining what each method should do, and there is also a ",(0,s.jsx)(t.a,{href:"https://github.com/gophercises/urlshort/blob/master/main/main.go",children:"main/main.go"})," source file that uses the package to help you test your code and get an idea of what your program should be doing."]}),"\n",(0,s.jsxs)(t.p,{children:["I suggest first commenting out all of the code in main.go related to the ",(0,s.jsx)(t.code,{children:"YAMLHandler"})," function and focusing on implementing the ",(0,s.jsx)(t.code,{children:"MapHandler"})," function first."]}),"\n",(0,s.jsxs)(t.p,{children:["Once you have that working, focus on parsing the YAML using the ",(0,s.jsx)(t.a,{href:"https://godoc.org/gopkg.in/yaml.v2",children:"gopkg.in/yaml.v2"})," package. ",(0,s.jsxs)(t.em,{children:["Note: You will need to ",(0,s.jsx)(t.code,{children:"go get"})," this package if you don't have it already."]})]}),"\n",(0,s.jsx)(t.p,{children:"After you get the YAML parsing down, try to convert the data into a map and then use the MapHandler to finish the YAMLHandler implementation. Eg you might end up with some code like this:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-go",children:"func YAMLHandler(yaml []byte, fallback http.Handler) (http.HandlerFunc, error) {\n  parsedYaml, err := parseYAML(yaml)\n  if err != nil {\n    return nil, err\n  }\n  pathMap := buildMap(parsedYaml)\n  return MapHandler(pathMap, fallback), nil\n}\n"})}),"\n",(0,s.jsxs)(t.p,{children:["But in order for this to work you will need to create functions like ",(0,s.jsx)(t.code,{children:"parseYAML"})," and ",(0,s.jsx)(t.code,{children:"buildMap"})," on your own. This should give you ample experience working with YAML data."]}),"\n",(0,s.jsx)(t.h2,{id:"bonus",children:"Bonus"}),"\n",(0,s.jsx)(t.p,{children:"As a bonus exercises you can also..."}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsxs)(t.li,{children:["Update the ",(0,s.jsx)(t.a,{href:"https://github.com/gophercises/urlshort/blob/master/main/main.go",children:"main/main.go"})," source file to accept a YAML file as a flag and then load the YAML from a file rather than from a string."]}),"\n",(0,s.jsx)(t.li,{children:"Build a JSONHandler that serves the same purpose, but reads from JSON data."}),"\n",(0,s.jsx)(t.li,{children:"Build a Handler that doesn't read from a map but instead reads from a database. Whether you use BoltDB, SQL, or something else is entirely up to you."}),"\n"]})]})}function c(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,t,r)=>{r.d(t,{R:()=>i,x:()=>a});var n=r(6540);const s={},o=n.createContext(s);function i(e){const t=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),n.createElement(o.Provider,{value:t},e.children)}}}]);